{"version":3,"sources":["helpers/helper.js","components/ControlPresupuesto.js","components/Error.js","components/Formulario.js","components/Gasto.js","components/Listado.js","components/Pregunta.js","App.js","reportWebVitals.js","index.js"],"names":["revisarPresupuesto","presupuesto","restante","ControlPresupuesto","className","Error","msg","Formulario","setGasto","setCrearGasto","useState","nombre","setNombre","cantidad","setCantidad","error","setError","onSubmit","e","preventDefault","isNaN","trim","gasto","id","shortid","generate","type","placeholder","value","onChange","target","parseInt","Gasto","Listado","gastos","map","Pregunta","setPresupuesto","setRestante","setMuestra","placeholde","prototype","PropTypes","func","isRequired","App","muestra","setGastos","crearGasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5312503a.chunk.js","sourcesContent":["\r\nexport const revisarPresupuesto = (presupuesto, restante) => {\r\n\r\n    let clase \r\n\r\n    if ( (presupuesto / 4) > restante ) {\r\n        clase = 'alert alert-danger'\r\n    } else if ( (presupuesto / 2) > restante ) {\r\n        clase = 'alert alert-warning'\r\n    } else {\r\n        clase = 'alert alert-success'\r\n    }\r\n\r\n    return clase\r\n\r\n}","import React from 'react';\r\nimport { revisarPresupuesto } from '../helpers/helper';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n    return ( \r\n\r\n        <>\r\n            <div className='alert alert-primary'>\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n            <div className={revisarPresupuesto(presupuesto, restante)}>\r\n                Restante: $ {restante}\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}\r\n \r\nexport default ControlPresupuesto;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({msg}) => {\r\n    return ( \r\n        <p className='alert alert-danger error'>\r\n            {msg}\r\n        </p>\r\n    );\r\n}\r\n\r\nError.propTypes = {\r\n    msg: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Error;","import React, { useState } from 'react';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({setGasto, setCrearGasto}) => {\r\n\r\n    const [nombre, setNombre] = useState('')\r\n    const [cantidad, setCantidad] = useState('')\r\n    const [error, setError] = useState(false)\r\n\r\n    const agregarGasto = (e) => {\r\n        e.preventDefault()\r\n\r\n        //validar\r\n        if (cantidad < 1 || isNaN( cantidad ) || nombre.trim() === '' ) {\r\n            setError(true)\r\n            return\r\n        }\r\n        //si pasa la validacion\r\n        setError(false)\r\n\r\n        //construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n\r\n        //pasar el gasto al componente principal\r\n        setGasto(gasto)\r\n        setCrearGasto(true)\r\n\r\n        //resetear el formulario\r\n        setNombre('')\r\n        setCantidad('')\r\n\r\n\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={agregarGasto}\r\n        >\r\n            <h2>Agrega tus gastos</h2>\r\n            {/* Si hay error entonces muestra esto */}\r\n            { error ? <Error msg='Los campos son ogligatorios' /> : null }\r\n            <div className='campo'>\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    type='text'\r\n                    className='u-full-width'\r\n                    placeholder='Ej. Transporte'\r\n                    value={nombre}\r\n                    onChange={(e) => setNombre(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='campo'>\r\n                <label>Cantidad Gasto</label>\r\n                <input\r\n                    type='number'\r\n                    className='u-full-width'\r\n                    placeholder='Ej. 17.000'\r\n                    value={cantidad}\r\n                    onChange={(e) => setCantidad(parseInt( e.target.value ))}\r\n                />\r\n            </div>\r\n            <input \r\n                type='submit'\r\n                className='button-primary u-full-width'\r\n                value='Agregar Gasto'\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    setGasto: PropTypes.func.isRequired,\r\n    setCrearGasto: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Gasto = ({gasto}) => {\r\n    return ( \r\n\r\n        <li className='gastos'>\r\n            <p>\r\n                {gasto.nombre}\r\n\r\n                <span className='gasto'>\r\n                    $ {gasto.cantidad}\r\n                </span>\r\n            </p>\r\n        </li>\r\n\r\n    );\r\n}\r\n\r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\n \r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({gastos}) => {\r\n    return ( \r\n        <div className='gastos-realizados'>\r\n            <h2>Listado</h2>\r\n            {gastos.map((gasto) => {\r\n                return (\r\n                    <Gasto \r\n                        key={gasto.id} \r\n                        gasto={gasto} \r\n                    />\r\n                ) \r\n            })}\r\n        </div>\r\n\r\n    ); \r\n}\r\n\r\nListado.propTypes = {\r\n    gastos: PropTypes.array.isRequired\r\n}\r\n \r\nexport default Listado;","import React, { useState } from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pregunta = ({ setPresupuesto, setRestante, setMuestra }) => {\r\n\r\n    const [cantidad, setCantidad] = useState(0)\r\n    const [error, setError] = useState(false)\r\n\r\n    //funcion para leer el presupuesto\r\n    const definirPresupuesto = (e) => {\r\n\r\n        setCantidad(parseInt(e.target.value))\r\n    }\r\n\r\n    //submit para definir presupuesto\r\n    const agregarPresupuesto = (e) => {\r\n        e.preventDefault()\r\n        //validar dato ingresado en el formulario\r\n        if (cantidad < 1 || isNaN( cantidad ) ) {\r\n            setError(true)\r\n            return\r\n        }\r\n\r\n        //si pasa la validacion\r\n        setError(false)\r\n        setPresupuesto(cantidad)\r\n        setRestante(cantidad)\r\n        setMuestra(false)\r\n\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            <h2>\r\n                Coloca tu presupuesto\r\n            </h2>\r\n            {/* Si hay error entonces muestra esto */}\r\n            { error ? <Error msg='El presupuesto es incorrecto' /> : null }\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input\r\n                    type='number'\r\n                    className='u-full-width'\r\n                    placeholde='Coloca tu puresupuesto'\r\n                    onChange={definirPresupuesto}\r\n                >\r\n\r\n                </input>\r\n\r\n                <input\r\n                    type='submit'\r\n                    className='button-primary u-full-width'\r\n                    value='Definir presupuesto'\r\n                >\r\n                    \r\n                </input>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n \r\nPregunta.prototype = {\r\n    setPresupuesto: PropTypes.func.isRequired,\r\n    setRestante: PropTypes.func.isRequired,\r\n    setMuestra: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Pregunta;","import { useEffect, useState } from \"react\";\nimport ControlPresupuesto from \"./components/ControlPresupuesto\";\nimport Formulario from \"./components/Formulario\";\nimport Listado from \"./components/Listado\";\nimport Pregunta from \"./components/Pregunta\";\n\nfunction App() {\n\n  const [presupuesto, setPresupuesto] = useState(0)\n  const [restante, setRestante] = useState(0)\n  const [muestra, setMuestra] = useState(true)  \n  const [gastos, setGastos] = useState([])\n  const [gasto, setGasto] = useState({})\n  const [crearGasto, setCrearGasto] = useState(false)\n\n  //actualiza el restante\n  useEffect(() => {\n    if (crearGasto) {\n      //Agrega el nuevo gasto al presupuesto\n      setGastos([\n        ...gastos,\n        gasto\n      ])\n\n      //Resta el nuevo gasto del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad\n      setRestante(presupuestoRestante)\n\n      //Resetea el parrafo con el gasto\n      setCrearGasto(false)\n    }\n  }, [gasto, crearGasto, gastos, restante])\n\n\n  return (\n    <div className='container'>\n      <header>\n        <h1>Gasto Semanal</h1>\n        <div className='contenido-principal contenido'>\n          { muestra ? \n            (\n              <Pregunta \n                setPresupuesto={setPresupuesto}\n                setRestante={setRestante}\n                setMuestra={setMuestra}\n              />\n            ) : \n            (\n              <div className='row'>\n                <div className='one-half column'>\n                  <Formulario \n                    setGasto={setGasto}\n                    setCrearGasto={setCrearGasto}\n                  />\n                </div>\n                <div className='one-half column'>\n                  <Listado \n                    gastos={gastos}\n                  />\n\n                  <ControlPresupuesto \n                    presupuesto={presupuesto}\n                    restante={restante}\n                  />\n                </div>\n              </div>\n            )\n          }\n          \n          \n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}